name: Build and Test
on:
  [ push, pull_request ]

jobs:
#   build-and-test-linux:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Install dependencies
#         run: |
#           sudo apt-get update
#           sudo apt-get install libgl1-mesa-dev
#           sudo apt-get install libglx-dev
#           sudo apt-get install libudev-dev
#           sudo apt-get install libopenal-dev
#           sudo apt-get install libvorbis-dev
#           sudo apt-get install libflac-dev
#           sudo apt-get install libogg-dev
#           sudo apt-get install libsfml-dev
#           sudo apt-get install libxrandr-dev
#           sudo apt-get install libx11-dev
#           sudo apt-get install libxcursor-dev
#           sudo apt-get install xvfb
#           sudo apt-get install cmake
#
#       - name: Build server
#         run: |
#           cd Server
#           cmake .
#           make
#
#       - name: Run server
#         run: |
#           cd Server
#           ./r-type_server
#
#       - name: Start virtual framebuffer
#         run: |
#           export DISPLAY=:99
#           Xvfb :99 -screen 0 1280x1024x24 &
#
#       - name: Build client
#         run: |
#           cd Client
#           cmake .
#           make
#
#       - name: Run client
#         run: |
#           cd Client
#            xvfb-run -a ./r-type_client &
#            sleep 10
#            kill -SIGTERM $!
#
windows-build:
  runs-on: windows-latest
  steps:
    # Checkout repo
    - uses: actions/checkout@v2
      with:
        submodules: true

    # Setup cmake
    - uses: lukka/get-cmake@latest

    - name: install-conan
      shell: powershell
      run: pip install conan

    - name: create-conan-profile
      shell: powershell
      # Generates default profile detecting GCC and sets old ABI
      run: >
        conan profile new default --detect;
        conan profile update conf.tools.system.package_manager:mode=install default;
        conan profile update conf.tools.system.package_manager:sudo=True default;
    # Build project
    - name: build
      shell: powershell
      run: >
        conan install conanfile.txt -if build --build=missing;
        cmake -S . -B build;
        cmake --build build;
    - name: verify-files
      shell: bash
      run: >
        rm ./build/bin/Client;
        rm ./build/bin/Server;